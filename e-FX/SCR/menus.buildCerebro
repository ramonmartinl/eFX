################################################################################
#!/bin/env bash
#
# Script for showing menus 4 building new Cerebro Release
#
# Usage: menus.buildCerebro
#
# Author: Ramon Martin Lopez [ramn.martn@servexternos.isban.es]
# Since: 28/01/2015 
# Last Modified: 28/01/2015 (ramn.martn)
#
###############################################################################

# Menu for building EFX Modules 
showBuildEFXModulesMenu(){
    clear
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_MENU}* Build Cerebro --> Select EFX Module to build ${FMT_NORMAL}"
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 1)${FMT_MENU} Build All modules ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 2)${FMT_MENU} Build eFX-AdaFIX ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 3)${FMT_MENU} Build eFX-Adartenon ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 4)${FMT_MENU} Build eFX-Adaxter ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 5)${FMT_MENU} Build eFX-Aggregation ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 6)${FMT_MENU} Build eFX-AutoCM ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 7)${FMT_MENU} Build eFX-Cleansing ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 8)${FMT_MENU} Build eFX-CustomerPricing ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 9)${FMT_MENU} Build eFX-DashboardBridge ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 10)${FMT_MENU} Build eFX-ForwardPricing ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 11)${FMT_MENU} Build eFX-LP-Citi ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 12)${FMT_MENU} Build eFX-LP-D3 ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 13)${FMT_MENU} Build eFX-LP-DB ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 14)${FMT_MENU} Build eFX-LP-FIX ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 15)${FMT_MENU} Build eFX-LP-GS ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 16)${FMT_MENU} Build eFX-LP-MF ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 17)${FMT_MENU} Build eFX-LP-MTI ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 18)${FMT_MENU} Build eFX-LP-UBS ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 19)${FMT_MENU} Build eFX-Modules ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 20)${FMT_MENU} Build eFX-NewTickStore ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 21)${FMT_MENU} Build eFX-Pricetenon ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 22)${FMT_MENU} Build eFX-Pricing ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 23)${FMT_MENU} Build eFX-SB7-Common ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 24)${FMT_MENU} Build eFX-SB7-Parent ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 25)${FMT_MENU} Build eFX-SB7-Tools ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 26)${FMT_MENU} Build eFX-TenorService ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 27)${FMT_MENU} Build eFX-TickStore ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 28)${FMT_MENU} Build eFX-TradeReports ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 29)${FMT_MENU} Build eFX-Trading ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 30)${FMT_MENU} Build eFX-Volatility ${FMT_NORMAL}"
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_ENTER_LINE}Please enter a menu option and enter or ${FMT_RED_TEXT}enter to exit. ${FMT_NORMAL}"
    read opt_efx_modules
}

# Read option from Build EFX Modules Menu
function listenBuildEFXModulesMenu(){
	while [ opt_efx_modules != '' ]
	    do
	    	case $opt_efx_modules in
	        "") clear
	        # EXIT Build EFX Modules Menu
	        	break
	        	;;
	        	
	        1) clear
	        # BUILD ALL MODULES
	        	option_picked "you chose to Build All eFX Modules"
	        	echo "All" >>$NEW_EFX_MODULES_TMP.$RELEASE_NUMBER.out
	        	builCerebro.buildAllEFXModules
	        	sleep 2
	        	break
	        	;;
	        
	        2) clear
	        # BUILD eFX-AdaFIX MODULE
	            option_picked "you chose to Build eFX-AdaFIX Module"
	            echo "eFX-AdaFIX" >>$NEW_EFX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildEFXModule eFX-AdaFIX
	            sleep 2
	            showBuildEFXModulesMenu
	            ;;
	          	        
	        3) clear
	        # BUILD eFX-Adartenon MODULE
	            option_picked "you chose to Build eFX-Adartenon Module"
	            echo "eFX-Adartenon" >>$NEW_EFX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildEFXModule eFX-Adartenon
	            sleep 2
	            showBuildEFXModulesMenu
	            ;;
	        	        
	        20) clear
	        # BUILD eFX-NewTickStore MODULE
	            option_picked "you chose to Build eFX-NewTickStore Module"
	            echo "eFX-NewTickStore" >>$NEW_EFX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildEFXModule eFX-NewTickStore
	            sleep 2
	            showBuildEFXModulesMenu
	            ;;
	                  	        
	        23) clear
	        # BUILD eFX-SB7-Common MODULE
	            option_picked "you chose to Build eFX-SB7-Common Module"
	            echo "eFX-SB7-Common" >>$NEW_EFX_MODULES_TMP.$RELEASE_NUMBER.out
	        	builCerebro.buildEFXSB7CommonModules
	        	sleep 2
	        	showBuildEFXModulesMenu
	            ;;
	
	        *) clear
	        	option_picked "Pick an option from the menu";
	        	showBuildEFXModulesMenu
	        	;;
	    	esac
	done
}


# Menu for building EFX Linux Modules 
showBuildLinuxModulesMenu(){
    clear
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_MENU}* Build Cerebro --> Select Linux Module to build ${FMT_NORMAL}"
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 1)${FMT_MENU} Build All modules ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 2)${FMT_MENU} Build Trading ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 3)${FMT_MENU} Build Pricing ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 4)${FMT_MENU} Build Tickstore ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 5)${FMT_MENU} Build LP ${FMT_NORMAL}"
    echo -e "${FMT_MENU}**${FMT_NUMBER} 6)${FMT_MENU} Build LP-DEV ${FMT_NORMAL}"
    echo -e "${FMT_MENU}*********************************************${FMT_NORMAL}"
    echo -e "${FMT_ENTER_LINE}Please enter a menu option and enter or ${FMT_RED_TEXT}enter to exit. ${FMT_NORMAL}"
    read opt_linux_modules
}


# Read option from Build EFX Linux Modules Menu
function listenBuildLinuxModulesMenu(){
	while [ opt_linux_modules != '' ]
	    do
	    	case $opt_linux_modules in
	        "") clear
	        # EXIT Build Linux Modules Menu
	        	break
	        	;;
	        	
	        1) clear
	        # BUILD ALL MODULES
	        	option_picked "you chose to Build All Linux Modules"
	        	echo "All" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	        	builCerebro.buildAllLinuxModules
	        	sleep 2
	        	break
	        	;;
	        
	        2) clear
	        # BUILD Trading MODULE
	            option_picked "you chose to Build Trading Module"
	            echo "trading" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildLinuxModule trading
	            sleep 2
	            showBuildLinuxModulesMenu
	            ;;
	          	        
	        3) clear
	        # BUILD Pricing MODULE
	            option_picked "you chose to Build Pricing Module"
	            echo "pricing" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildLinuxModule pricing
	            sleep 2
	            showBuildLinuxModulesMenu
	            ;;
	        	        
	        4) clear
	        # BUILD Tickstore MODULE
	            option_picked "you chose to Build Tickstore Module"
	            echo "tickStore" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	            builCerebro.buildLinuxModule tickStore
	            sleep 2
	            showBuildLinuxModulesMenu
	            ;;
	                  	        
	        5) clear
	        # BUILD LP MODULE
	            option_picked "you chose to Build LP Module"
	            echo "lp" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	        	builCerebro.buildLinuxModule lp
	        	sleep 2
	        	showBuildLinuxModulesMenu
	            ;;
		                  	        
	        6) clear
	        # BUILD LP-DEV MODULE
	            option_picked "you chose to Build LP-DEV Module"
	            echo "lp-dev" >>$NEW_LINUX_MODULES_TMP.$RELEASE_NUMBER.out
	        	builCerebro.buildLinuxModule lp-dev
	        	sleep 2
	        	showBuildLinuxModulesMenu
	            ;;
	            
	        *) clear
	        	option_picked "Pick an option from the menu";
	        	showBuildLinuxModulesMenu
	        	;;
	    	esac
	done
}